"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const minimist_1 = __importDefault(require("minimist"));
const path_1 = require("path");
const print_1 = require("./lib/print");
const consts_1 = require("./lib/consts");
const argv = minimist_1.default(process.argv.slice(2));
const HELP_TEXT = `Usage: graphql-let [command]

graphql-let         Generates .graphql.d.ts beside all GraphQL documents based on .graphql-let.yml config
graphql-let init    Generates a template of .graphql-let.yml configuration file 
`;
if (argv.help || argv.h) {
    console.info(HELP_TEXT);
    process.exit(0);
}
let command;
switch (argv._[0]) {
    case 'gen':
    case undefined:
        command = 'gen';
        break;
    case 'init':
        command = 'init';
        break;
    default:
        print_1.printError(new Error(HELP_TEXT));
        process.exit(1);
        break;
}
function createOpts() {
    const cwd = process.cwd();
    const configPath = path_1.join(cwd, argv.config || argv.c || consts_1.DEFAULT_CONFIG_FILENAME);
    return { cwd, configPath };
}
function run(command) {
    const fn = require(`./${command}`).default;
    return Promise.resolve(fn(createOpts()));
}
run(command).catch((err) => {
    print_1.printError(err);
    process.exit(1);
});
